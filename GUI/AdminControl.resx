<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btFlightSearch.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AYEDyYXCnLQHQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPSSURBVFhH
        vZe7b1xFFIeXt4REgwhKqAjE4IACRSiAgooyES5QKPJAICsVNdAhJP4DJCKqJJRWand+724sscZOwBKs
        UtmAiOiChIDGfN/y29E1d3eN4yU/6ejOeZ+ZuXfO3MbdYmlp6eLi4uKP0PbCwsJ0xPcGJJwk8Q88D0uM
        u/Pz889H/f+DpFMkvRq24VhZ2INjZmbmAWb0Ist8fGdn5/6IC5aXlw9l6c/xPJ/xE1EX6GsMYxkz4tHQ
        mIDf4djkeR1aZzwRdQFFvISuJaE/EXHBysrKc+g2oHZifYvPC1EPhlVqyGxOReTLdgbqhN0F7D6WwhYw
        8/uI8w26tyNym05DNwetaEGWvRm2wGDIj4YtGFYAs38Gn7WwBchaI1eBJMcxuh62ANkNEh0LWzCsAOJM
        4LMRtgD5KvaTYetweXB0z89EpNO7yNZc1ogK0J2Qwhb0twDdhYi0fUfZyC0QGFr9msbQjTy3qPzVmBR0
        Op1HpbAF2uoTX19EJ9VBXlvFocDhqA7OJgG/UC6P7g34y9AvocvK+qvE+JI+8T1mLOUHAoGeJtAnJLsF
        LUHvNZvNxyTHkd3SRtu4jQcEfJDgf0J/QR/Ozs4+ElWBMnWx+UOfqPYGxpPQlCdcRLuwubn5MEF/xeYU
        M7zG+Geen8O/IjmO7Jo22uoT911otVpPmqv0Dpzsal3oKrTtCddT/AvYvZ5ho91uP06QD7D/XnKsLGo/
        29uDCiDpy+aAzNXFb1pjz/HDGvD0bPdo/ahCvc8M+Ws+q8B+4DmA7U98HQ/pW42F3GP5rDZM9Ii5ewXI
        xNHGUisgW3BbmyqGFYCs9xLqW41lbHTn1PHyPgW/pfE0A7fgK2hbJw2q2G8BxCgHWRVurzmSq4vd+z2F
        LwT0FsFqLVXstwBth72EvujmsltGtDdI4mf4G/Tp3NzcsxHXClCnDXRHn4jHAwLWDiJkn0mOIxvfQWRL
        JdhE/yhmfCkqt+wkyb6E7kC/QzPYvDnoKDaGsXqO/wW5ydhEbEg2koM2o/U81ywmJoNBxbbjDQKUmwxO
        FwzQn10V6Ea2Y+h8RL0vA37dHBHVgZEXknbYAmR3cyFZD1uAfNUcYetgb4ddyezn47iStfkMh1/J+pdS
        6HREVu1N5uuwuzCsgGyBe14OJL99ZKMvpcIKNYQ8kld5erutLT8BbSxtyRMu4gJ8e9uQGNrdZDx8+auw
        Sgsh8eSgim2pBPTYPouNDcx+Umvl+prUWHvOfD8g6RR0Jax7O95fs73gypC0y8yOSI7Zknv3cyoowi5q
        Z9timf/pavtGo/E3rIFLKCKj2VQAAAAASUVORK5CYII=
</value>
  </data>
</root>